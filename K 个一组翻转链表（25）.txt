https://leetcode-cn.com/problems/reverse-nodes-in-k-group/

K 个一组翻转链表（25）

# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, x):
#         self.val = x
#         self.next = None

class Solution:
    def reverseKGroup(self, head: ListNode, k: int) -> ListNode:
        prehead = ListNode(-1)
        prehead.next = head
        p = prehead

        p_list = [None for _ in range(k)]
        while True:
            prenode = p
            for i in range(k):
                if p == None:
                    break
                p = p.next
                p_list[i] = p
            if p == None:
                break
            prenode.next = p_list[k-1]
            p_list[0].next = p_list[k-1].next
            for i in range(k-1,0,-1):
                p_list[i].next = p_list[i-1]
            p = p_list[0]
        return prehead.next